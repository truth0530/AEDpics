generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model accounts {
  id                  String        @id @db.Uuid
  user_id             String        @db.Uuid
  type                String
  provider            String
  provider_account_id String
  refresh_token       String?
  access_token        String?
  expires_at          Int?
  token_type          String?
  scope               String?
  id_token            String?
  session_state       String?
  user_profiles       user_profiles @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@unique([provider, provider_account_id])
}

model aed_data {
  id                            Int                      @id @default(autoincrement())
  equipment_serial              String                   @unique @db.VarChar(255)
  management_number             String?                  @db.VarChar
  model_name                    String?                  @db.VarChar
  manufacturer                  String?                  @db.VarChar
  manufacturing_country         String?                  @db.VarChar
  manufacturing_date            DateTime?                @db.Date
  serial_number                 String?                  @db.VarChar
  installation_date             DateTime?                @db.Date
  first_installation_date       DateTime?                @db.Date
  installation_institution      String?                  @db.VarChar
  installation_address          String?                  @db.VarChar
  installation_position         String?                  @db.VarChar
  installation_method           String?                  @db.VarChar
  jurisdiction_health_center    String?                  @db.VarChar
  manager                       String?                  @db.VarChar
  institution_contact           String?                  @db.VarChar
  establisher                   String?                  @db.VarChar
  purchase_institution          String?                  @db.VarChar
  sido                          String?                  @db.VarChar
  gugun                         String?                  @db.VarChar
  longitude                     Decimal?                 @db.Decimal(11, 8)
  latitude                      Decimal?                 @db.Decimal(10, 8)
  operation_status              String?                  @db.VarChar
  display_allowed               String?                  @db.VarChar
  external_display              String?                  @db.VarChar
  external_non_display_reason   String?                  @db.VarChar
  government_support            String?                  @db.VarChar
  battery_expiry_date           DateTime?                @db.Date
  patch_available               String?                  @db.VarChar
  patch_expiry_date             DateTime?                @db.Date
  last_inspection_date          DateTime?                @db.Date
  last_use_date                 Decimal?
  replacement_date              DateTime?                @db.Date
  category_1                    String?                  @db.VarChar
  category_2                    String?                  @db.VarChar
  category_3                    String?                  @db.VarChar
  registration_date             DateTime?                @db.Date
  remarks                       String?                  @db.VarChar
  created_at                    DateTime                 @default(now()) @db.Timestamptz(6)
  updated_at                    DateTime                 @default(now()) @db.Timestamptz(6)
  report_date                   DateTime?                @db.Date
  installation_location_address String?                  @db.VarChar(255)
  saeum_deletion_status         String?                  @db.VarChar(255)
  data_status                   String?
  first_seen_date               DateTime?                @db.Date
  last_seen_date                DateTime?                @db.Date
  consecutive_missing_days      Int?                     @default(0)
  deletion_suspected_date       DateTime?                @db.Date
  sync_batch_id                 String?
  search_vector                 Unsupported("tsvector")?
  gps_issues                    gps_issues[]
  inspection_schedules          inspection_schedules[]
  inspection_sessions           inspection_sessions[]     @relation("SessionToAedData")
  inspections                   inspections[]             @relation("InspectionToAedData")

  @@index([latitude, longitude], map: "idx_aed_data_coordinates")
  @@index([data_status], map: "idx_aed_data_data_status")
  @@index([equipment_serial], map: "idx_aed_data_equipment_serial")
  @@index([battery_expiry_date, patch_expiry_date], map: "idx_aed_data_expiry_dates")
  @@index([management_number], map: "idx_aed_data_management_number")
  @@index([sido, gugun, category_1, operation_status], map: "idx_aed_data_region_with_filters")
  @@index([search_vector], map: "idx_aed_data_search_vector", type: Gin)
  @@index([equipment_serial], map: "idx_aed_data_serial")
  @@index([sido, gugun], map: "idx_aed_data_sido_gugun")
  @@index([sido, manufacturer], map: "idx_aed_data_sido_manufacturer")
}

model audit_logs {
  id            String         @id @db.Uuid
  user_id       String?        @db.Uuid
  action        String
  entity_type   String?
  entity_id     String?        @db.Uuid
  resource_type String?
  actor_id      String?        @db.Uuid
  metadata      Json           @default("{}")
  ip_address    String?
  user_agent    String?
  created_at    DateTime       @default(now()) @db.Timestamptz(6)
  user_profiles user_profiles? @relation(fields: [user_id], references: [id])

  @@index([action], map: "idx_audit_logs_action")
  @@index([created_at(sort: Desc)], map: "idx_audit_logs_created_at")
  @@index([entity_type, entity_id], map: "idx_audit_logs_entity")
  @@index([user_id], map: "idx_audit_logs_user_id")
}

model gps_analysis_logs {
  id                    String   @id @db.Uuid
  analysis_date         DateTime @unique @db.Date
  total_records         Int?
  issues_found          Int?
  default_coordinates   Int?
  address_mismatch      Int?
  outliers              Int?
  duplicate_coordinates Int?
  clusters              Int?
  execution_time_ms     Int?
  status                String?  @db.VarChar(20)
  error_message         String?
  created_at            DateTime @default(now()) @db.Timestamp(6)

  @@index([analysis_date], map: "idx_gps_analysis_date")
}

model gps_issues {
  id                String         @id @db.Uuid
  aed_data_id       Int
  management_number String         @db.VarChar(255)
  issue_type        gps_issue_type
  severity          gps_severity
  description       String?
  detected_lat      Decimal?       @db.Decimal(10, 8)
  detected_lng      Decimal?       @db.Decimal(11, 8)
  expected_lat      Decimal?       @db.Decimal(10, 8)
  expected_lng      Decimal?       @db.Decimal(11, 8)
  distance_km       Decimal?       @db.Decimal(10, 2)
  metadata          Json?
  is_resolved       Boolean        @default(false)
  resolved_at       DateTime?      @db.Timestamp(6)
  resolved_by       String?        @db.VarChar(255)
  created_at        DateTime       @default(now()) @db.Timestamp(6)
  updated_at        DateTime       @default(now()) @db.Timestamp(6)
  aed_data          aed_data       @relation(fields: [aed_data_id], references: [id], onDelete: Cascade)

  @@index([aed_data_id], map: "idx_gps_issues_aed_id")
  @@index([created_at(sort: Desc)], map: "idx_gps_issues_created_at")
  @@index([is_resolved], map: "idx_gps_issues_is_resolved")
  @@index([issue_type], map: "idx_gps_issues_issue_type")
  @@index([management_number], map: "idx_gps_issues_management_number")
  @@index([severity], map: "idx_gps_issues_severity")
}

model inspection_assignments {
  id                                                              String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  equipment_serial                                                String         @db.VarChar(255)
  assigned_to                                                     String?        @db.Uuid
  assigned_by                                                     String?        @db.Uuid
  assignment_type                                                 String?
  scheduled_date                                                  DateTime?      @db.Date
  scheduled_time                                                  DateTime?      @db.Time(6)
  status                                                          String?        @default("pending")
  priority_level                                                  Int?
  notes                                                           String?
  started_at                                                      DateTime?      @db.Timestamptz(6)
  completed_at                                                    DateTime?      @db.Timestamptz(6)
  cancelled_at                                                    DateTime?      @db.Timestamptz(6)
  created_at                                                      DateTime?      @default(now()) @db.Timestamptz(6)
  updated_at                                                      DateTime?      @default(now()) @db.Timestamptz(6)
  user_profiles_inspection_assignments_assigned_byTouser_profiles user_profiles? @relation("inspection_assignments_assigned_byTouser_profiles", fields: [assigned_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user_profiles_inspection_assignments_assigned_toTouser_profiles user_profiles? @relation("inspection_assignments_assigned_toTouser_profiles", fields: [assigned_to], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([assigned_to, status, scheduled_date(sort: Desc)], map: "idx_assignments_user_status")
  @@index([assigned_to], map: "idx_inspection_assignments_assigned_to")
  @@index([equipment_serial], map: "idx_inspection_assignments_equipment")
  @@index([equipment_serial, status], map: "idx_inspection_assignments_equipment_status")
}

model inspection_schedule_entries {
  id                      String            @id @db.Uuid
  device_equipment_serial String            @db.VarChar(255)
  scheduled_for           DateTime          @db.Timestamptz(6)
  assignee_identifier     String
  priority                schedule_priority @default(normal)
  status                  schedule_status   @default(scheduled)
  notes                   String?
  created_by              String            @db.Uuid
  created_at              DateTime          @default(now()) @db.Timestamptz(6)
  updated_at              DateTime          @default(now()) @db.Timestamptz(6)
  user_profiles           user_profiles     @relation(fields: [created_by], references: [id])

  @@index([created_by], map: "idx_inspection_schedule_entries_created_by")
  @@index([device_equipment_serial], map: "idx_inspection_schedule_entries_device")
  @@index([scheduled_for(sort: Desc)], map: "idx_inspection_schedule_entries_scheduled_for")
}

model inspection_schedules {
  id                  String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  aed_data_id         Int?
  equipment_serial    String
  scheduled_for       DateTime?      @db.Timestamptz(6)
  assignee_identifier String?
  priority            String?
  status              String?        @default("pending")
  notes               String?
  created_by          String?        @db.Uuid
  created_at          DateTime?      @default(now()) @db.Timestamptz(6)
  updated_at          DateTime?      @default(now()) @db.Timestamptz(6)
  aed_data            aed_data?      @relation(fields: [aed_data_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user_profiles       user_profiles? @relation(fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([equipment_serial], map: "idx_inspection_schedules_equipment")
}

model inspection_sessions {
  id                  String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  equipment_serial    String         @db.VarChar(255)
  inspector_id        String?        @db.Uuid
  status              String?        @default("active")
  current_step        Int?           @default(1)
  step_data           Json?
  started_at          DateTime?      @default(now()) @db.Timestamptz(6)
  paused_at           DateTime?      @db.Timestamptz(6)
  resumed_at          DateTime?      @db.Timestamptz(6)
  completed_at        DateTime?      @db.Timestamptz(6)
  cancelled_at        DateTime?      @db.Timestamptz(6)
  device_info         Json?
  notes               String?
  field_changes       Json?
  original_snapshot   Json?
  current_snapshot    Json?
  snapshot_updated_at DateTime?      @db.Timestamptz(6)
  last_accessed_at    DateTime?      @default(now()) @db.Timestamptz(6)
  refresh_status      String?        @db.VarChar(20)
  refresh_error       String?
  created_at          DateTime?      @default(now()) @db.Timestamptz(6)
  updated_at          DateTime?      @default(now()) @db.Timestamptz(6)
  aed_data            aed_data?      @relation("SessionToAedData", fields: [equipment_serial], references: [equipment_serial], onDelete: NoAction, onUpdate: NoAction)
  user_profiles       user_profiles? @relation(fields: [inspector_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([equipment_serial], map: "idx_inspection_sessions_equipment")
  @@index([inspector_id], map: "idx_inspection_sessions_inspector")
  @@index([status], map: "idx_inspection_sessions_status")
  @@index([inspector_id, status, started_at(sort: Desc)], map: "idx_sessions_inspector_status")
}

model inspections {
  id                   String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  aed_data_id          Int?
  equipment_serial     String
  inspector_id         String?        @db.Uuid
  inspection_date      DateTime?      @default(dbgenerated("CURRENT_DATE")) @db.Date
  inspection_type      String?
  visual_status        String?
  battery_status       String?
  pad_status           String?
  operation_status     String?
  overall_status       String?
  notes                String?
  issues_found         String[]
  photos               String[]
  inspection_latitude  Decimal?       @db.Decimal
  inspection_longitude Decimal?       @db.Decimal
  issues               Json?
  original_data        Json?
  registered_data      Json?
  inspected_data       Json?
  created_at           DateTime?      @default(now()) @db.Timestamptz(6)
  updated_at           DateTime?      @default(now()) @db.Timestamptz(6)
  completed_at         DateTime?      @db.Timestamptz(6)
  aed_data             aed_data?      @relation("InspectionToAedData", fields: [aed_data_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "inspections_aed_data_id_fkey")
  user_profiles        user_profiles? @relation("InspectionToInspector", fields: [inspector_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "inspections_inspector_id_fkey")

  @@index([equipment_serial], map: "idx_inspections_equipment_serial")
  @@index([inspector_id], map: "idx_inspections_inspector_id")
}

model login_history {
  id            String         @id @db.Uuid
  user_id       String?        @db.Uuid
  login_time    DateTime       @default(now()) @db.Timestamptz(6)
  ip_address    String?
  user_agent    String?
  success       Boolean        @default(true)
  created_at    DateTime       @default(now()) @db.Timestamptz(6)
  user_profiles user_profiles? @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@index([created_at(sort: Desc)], map: "idx_login_history_created_at")
  @@index([user_id], map: "idx_login_history_user_id")
}

model management_number_group_mapping {
  id                                                                             String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  management_number                                                              String?        @unique @db.VarChar(100)
  target_key_2024                                                                String?        @db.VarChar(255)
  auto_suggested_2024                                                            String?        @db.VarChar(255)
  auto_confidence_2024                                                           Decimal?       @db.Decimal
  auto_matching_reason_2024                                                      Json?
  confirmed_2024                                                                 Boolean?       @default(false)
  confirmed_by_2024                                                              String?        @db.Uuid
  confirmed_at_2024                                                              DateTime?      @db.Timestamptz(6)
  modified_by_2024                                                               String?        @db.Uuid
  modified_at_2024                                                               DateTime?      @db.Timestamptz(6)
  modification_note_2024                                                         String?
  target_key_2025                                                                String?        @db.VarChar(255)
  auto_suggested_2025                                                            String?        @db.VarChar(255)
  auto_confidence_2025                                                           Decimal?       @db.Decimal
  auto_matching_reason_2025                                                      Json?
  confirmed_2025                                                                 Boolean?       @default(false)
  confirmed_by_2025                                                              String?        @db.Uuid
  confirmed_at_2025                                                              DateTime?      @db.Timestamptz(6)
  modified_by_2025                                                               String?        @db.Uuid
  modified_at_2025                                                               DateTime?      @db.Timestamptz(6)
  modification_note_2025                                                         String?
  created_at                                                                     DateTime?      @default(now()) @db.Timestamptz(6)
  updated_at                                                                     DateTime?      @default(now()) @db.Timestamptz(6)
  user_profiles_management_number_group_mapping_confirmed_by_2024Touser_profiles user_profiles? @relation("management_number_group_mapping_confirmed_by_2024Touser_profiles", fields: [confirmed_by_2024], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user_profiles_management_number_group_mapping_confirmed_by_2025Touser_profiles user_profiles? @relation("management_number_group_mapping_confirmed_by_2025Touser_profiles", fields: [confirmed_by_2025], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user_profiles_management_number_group_mapping_modified_by_2024Touser_profiles  user_profiles? @relation("management_number_group_mapping_modified_by_2024Touser_profiles", fields: [modified_by_2024], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user_profiles_management_number_group_mapping_modified_by_2025Touser_profiles  user_profiles? @relation("management_number_group_mapping_modified_by_2025Touser_profiles", fields: [modified_by_2025], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([management_number], map: "idx_management_number_group")
  @@index([confirmed_2024], map: "idx_mgmt_group_confirmed_2024")
  @@index([target_key_2024], map: "idx_mgmt_group_target_2024")
  @@index([target_key_2025], map: "idx_mgmt_group_target_2025")
}

model notification_templates {
  type                 String                @id @db.VarChar(50)
  title_template       String                @db.VarChar(255)
  message_template     String
  default_expiry_hours Int?
  email_enabled        Boolean               @default(true)
  push_enabled         Boolean               @default(true)
  priority             notification_priority @default(medium)
}

model notifications {
  id                                                      String            @id @db.Uuid
  recipient_id                                            String            @db.Uuid
  sender_id                                               String?           @db.Uuid
  type                                                    notification_type
  title                                                   String            @db.VarChar(255)
  message                                                 String
  data                                                    Json              @default("{}")
  is_read                                                 Boolean           @default(false)
  created_at                                              DateTime          @default(now()) @db.Timestamptz(6)
  expires_at                                              DateTime?         @db.Timestamptz(6)
  user_profiles_notifications_recipient_idTouser_profiles user_profiles     @relation("notifications_recipient_idTouser_profiles", fields: [recipient_id], references: [id], onDelete: Cascade)
  user_profiles_notifications_sender_idTouser_profiles    user_profiles?    @relation("notifications_sender_idTouser_profiles", fields: [sender_id], references: [id])

  @@index([created_at(sort: Desc)], map: "idx_notifications_created_at")
  @@index([expires_at], map: "idx_notifications_expires_at")
  @@index([recipient_id, is_read, created_at(sort: Desc)], map: "idx_notifications_recipient_unread")
  @@index([type], map: "idx_notifications_type")
}

model organizations {
  id                  String               @id @db.Uuid
  name                String
  type                organization_type
  parent_id           String?              @db.Uuid
  region_code         String?
  city_code           String?
  address             String?
  contact             String?
  latitude            Decimal?             @db.Decimal(10, 8)
  longitude           Decimal?             @db.Decimal(11, 8)
  created_at          DateTime             @default(now()) @db.Timestamptz(6)
  updated_at          DateTime             @default(now()) @db.Timestamptz(6)
  organizations       organizations?       @relation("organizationsToorganizations", fields: [parent_id], references: [id])
  other_organizations organizations[]      @relation("organizationsToorganizations")
  task_assignments    task_assignments[]
  team_activity_logs  team_activity_logs[]
  team_members        team_members[]
  user_profiles       user_profiles[]

  @@index([region_code], map: "idx_organizations_region")
  @@index([type], map: "idx_organizations_type")
}

model otp_rate_limits {
  id                String   @id @db.Uuid
  email             String
  request_count     Int      @default(1)
  first_request_at  DateTime @default(now()) @db.Timestamptz(6)
  last_request_at   DateTime @default(now()) @db.Timestamptz(6)
  window_expires_at DateTime @db.Timestamptz(6)
  created_at        DateTime @default(now()) @db.Timestamptz(6)
  updated_at        DateTime @default(now()) @db.Timestamptz(6)

  @@index([email], map: "idx_otp_rate_limits_email")
  @@index([window_expires_at], map: "idx_otp_rate_limits_window_expires")
}

model email_verification_codes {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email      String
  code       String
  expires_at DateTime @db.Timestamptz(6)
  used       Boolean  @default(false)
  created_at DateTime @default(now()) @db.Timestamptz(6)
  updated_at DateTime @default(now()) @updatedAt @db.Timestamptz(6)

  @@index([email], map: "idx_email_verification_codes_email")
  @@index([code], map: "idx_email_verification_codes_code")
  @@index([expires_at], map: "idx_email_verification_codes_expires")
}

model schedule_instances {
  id                 String          @id @db.Uuid
  schedule_id        String          @db.Uuid
  scheduled_date     DateTime        @db.Date
  scheduled_time     DateTime?       @db.Time(6)
  assigned_inspector String?         @db.Uuid
  status             instance_status @default(scheduled)
  started_at         DateTime?       @db.Timestamptz(6)
  completed_at       DateTime?       @db.Timestamptz(6)
  inspection_id      String?         @db.Uuid
  rescheduled_to     DateTime?       @db.Date
  rescheduled_reason String?
  created_at         DateTime        @default(now()) @db.Timestamptz(6)
  updated_at         DateTime        @default(now()) @db.Timestamptz(6)
  team_members       team_members?   @relation(fields: [assigned_inspector], references: [id])

  @@index([scheduled_date], map: "idx_schedule_instances_date")
  @@index([schedule_id], map: "idx_schedule_instances_schedule")
  @@index([status], map: "idx_schedule_instances_status")
}

model sessions {
  id            String        @id @db.Uuid
  session_token String        @unique
  user_id       String        @db.Uuid
  expires       DateTime
  user_profiles user_profiles @relation(fields: [user_id], references: [id], onDelete: Cascade)
}

model target_list_2024 {
  target_key        String    @id @db.VarChar(255)
  no                Int?
  sido              String?   @db.VarChar(50)
  gugun             String?   @db.VarChar(100)
  division          String?   @db.VarChar(100)
  sub_division      String?   @db.VarChar(100)
  institution_name  String?   @db.VarChar(255)
  target_keygroup   String?   @db.VarChar(255)
  management_number String?   @db.VarChar(100)
  data_year         Int?      @default(2024)
  imported_at       DateTime? @db.Timestamptz(6)
  created_at        DateTime? @default(now()) @db.Timestamptz(6)
  updated_at        DateTime? @default(now()) @db.Timestamptz(6)

  @@index([target_keygroup], map: "idx_target_2024_keygroup")
  @@index([sido, gugun], map: "idx_target_2024_location")
  @@index([management_number], map: "idx_target_2024_mgmt_num")
  @@index([management_number], map: "idx_target_list_2024_management")
}

model target_list_devices {
  id                                                           String          @id @db.Uuid
  target_list_year                                             Int
  target_institution_id                                        String          @db.VarChar(50)
  equipment_serial                                             String          @db.VarChar(255)
  matching_method                                              matching_method @default(manual)
  matching_confidence                                          Decimal?        @db.Decimal(5, 2)
  matching_reason                                              Json?
  matched_by                                                   String?         @db.Uuid
  matched_at                                                   DateTime        @default(now()) @db.Timestamptz(6)
  verified_by                                                  String?         @db.Uuid
  verified_at                                                  DateTime?       @db.Timestamptz(6)
  created_at                                                   DateTime        @default(now()) @db.Timestamptz(6)
  updated_at                                                   DateTime        @default(now()) @db.Timestamptz(6)
  user_profiles_target_list_devices_matched_byTouser_profiles  user_profiles?  @relation("target_list_devices_matched_byTouser_profiles", fields: [matched_by], references: [id])
  user_profiles_target_list_devices_verified_byTouser_profiles user_profiles?  @relation("target_list_devices_verified_byTouser_profiles", fields: [verified_by], references: [id])

  @@unique([target_list_year, equipment_serial])
  @@index([equipment_serial], map: "idx_target_devices_equipment")
  @@index([matching_method], map: "idx_target_devices_method")
  @@index([target_list_year], map: "idx_target_devices_year")
  @@index([target_list_year, target_institution_id], map: "idx_target_devices_year_institution")
}

model task_assignments {
  id                 String               @id @db.Uuid
  organization_id    String               @db.Uuid
  task_type          task_type
  title              String
  description        String?
  priority           task_priority?
  status             task_status          @default(pending)
  assigned_to        String?              @db.Uuid
  assigned_by        String               @db.Uuid
  aed_device_id      String?              @db.Uuid
  scheduled_date     DateTime?            @db.Date
  scheduled_time     DateTime?            @db.Time(6)
  deadline           DateTime?            @db.Timestamptz(6)
  completed_at       DateTime?            @db.Timestamptz(6)
  notes              String?
  attachments        Json?
  created_at         DateTime             @default(now()) @db.Timestamptz(6)
  updated_at         DateTime             @default(now()) @db.Timestamptz(6)
  user_profiles      user_profiles        @relation(fields: [assigned_by], references: [id])
  organizations      organizations        @relation(fields: [organization_id], references: [id])
  team_activity_logs team_activity_logs[]

  @@index([assigned_to], map: "idx_task_assignments_assigned_to")
  @@index([organization_id], map: "idx_task_assignments_organization")
  @@index([scheduled_date], map: "idx_task_assignments_scheduled_date")
  @@index([status], map: "idx_task_assignments_status")
}

model team_activity_logs {
  id                   String            @id @db.Uuid
  organization_id      String            @db.Uuid
  activity_type        String
  activity_description String
  performed_by         String?           @db.Uuid
  team_member_id       String?           @db.Uuid
  task_id              String?           @db.Uuid
  schedule_id          String?           @db.Uuid
  metadata             Json?
  ip_address           String?           @db.Inet
  created_at           DateTime          @default(now()) @db.Timestamptz(6)
  organizations        organizations     @relation(fields: [organization_id], references: [id])
  user_profiles        user_profiles?    @relation(fields: [performed_by], references: [id])
  task_assignments     task_assignments? @relation(fields: [task_id], references: [id])
  team_members         team_members?     @relation(fields: [team_member_id], references: [id])

  @@index([created_at], map: "idx_team_activity_logs_created_at")
  @@index([organization_id], map: "idx_team_activity_logs_organization")
  @@index([performed_by], map: "idx_team_activity_logs_performed_by")
}

model team_members {
  id                                                        String               @id @db.Uuid
  organization_id                                           String               @db.Uuid
  name                                                      String
  email                                                     String?
  phone                                                     String?
  position                                                  String?
  member_type                                               member_type
  user_profile_id                                           String?              @db.Uuid
  added_by                                                  String               @db.Uuid
  is_active                                                 Boolean              @default(true)
  notes                                                     String?
  temporary_period_start                                    DateTime?            @db.Date
  temporary_period_end                                      DateTime?            @db.Date
  created_at                                                DateTime             @default(now()) @db.Timestamptz(6)
  updated_at                                                DateTime             @default(now()) @db.Timestamptz(6)
  schedule_instances                                        schedule_instances[]
  team_activity_logs                                        team_activity_logs[]
  user_profiles_team_members_added_byTouser_profiles        user_profiles        @relation("team_members_added_byTouser_profiles", fields: [added_by], references: [id])
  organizations                                             organizations        @relation(fields: [organization_id], references: [id])
  user_profiles_team_members_user_profile_idTouser_profiles user_profiles?       @relation("team_members_user_profile_idTouser_profiles", fields: [user_profile_id], references: [id])
  team_permissions                                          team_permissions[]

  @@index([is_active], map: "idx_team_members_active")
  @@index([organization_id], map: "idx_team_members_organization")
  @@index([user_profile_id], map: "idx_team_members_user_profile")
}

model team_permissions {
  id                      String        @id @db.Uuid
  team_member_id          String        @db.Uuid
  can_view_team_members   Boolean       @default(false)
  can_manage_team_members Boolean       @default(false)
  can_assign_tasks        Boolean       @default(false)
  can_view_all_tasks      Boolean       @default(false)
  can_manage_schedules    Boolean       @default(false)
  can_perform_inspections Boolean       @default(true)
  can_view_reports        Boolean       @default(false)
  can_export_data         Boolean       @default(false)
  accessScope             access_scope?
  custom_access_list      String[]
  granted_by              String        @db.Uuid
  granted_at              DateTime      @default(now()) @db.Timestamptz(6)
  user_profiles           user_profiles @relation(fields: [granted_by], references: [id])
  team_members            team_members  @relation(fields: [team_member_id], references: [id], onDelete: Cascade)
}

model user_profiles {
  id                                                                                               String                            @id @db.Uuid
  email                                                                                            String                            @unique
  full_name                                                                                        String
  phone                                                                                            String?
  organization_id                                                                                  String?                           @db.Uuid
  role                                                                                             user_role
  is_active                                                                                        Boolean                           @default(true)
  approved_by                                                                                      String?                           @db.Uuid
  approved_at                                                                                      DateTime?                         @db.Timestamptz(6)
  region                                                                                           String?
  organization_name                                                                                String?
  remarks                                                                                          String?
  region_code                                                                                      String?
  district                                                                                         String?
  department                                                                                       String?
  position                                                                                         String?
  can_approve_users                                                                                Boolean                           @default(false)
  can_manage_devices                                                                               Boolean                           @default(true)
  can_view_reports                                                                                 Boolean                           @default(true)
  can_export_data                                                                                  Boolean                           @default(false)
  last_login_at                                                                                    DateTime?                         @db.Timestamptz(6)
  account_locked                                                                                   Boolean                           @default(false)
  lock_reason                                                                                      String?
  created_at                                                                                       DateTime                          @default(now()) @db.Timestamptz(6)
  updated_at                                                                                       DateTime                          @default(now()) @db.Timestamptz(6)
  password_hash                                                                                    String?
  employee_id                                                                                      String?
  permission_scope                                                                                 String[]
  approval_notes                                                                                   String?
  rejected_reason                                                                                  String?
  rejection_count                                                                                  Int?                              @default(0)
  login_count                                                                                      Int?                              @default(0)
  password_changed_at                                                                              DateTime?                         @db.Timestamptz(6)
  must_change_password                                                                             Boolean?                          @default(false)
  email_notifications                                                                              Boolean?                          @default(true)
  sms_notifications                                                                                Boolean?                          @default(false)
  notification_email                                                                               String?
  notification_phone                                                                               String?
  account_type                                                                                     String?                           @db.VarChar(20)
  assigned_devices                                                                                 String[]
  accounts                                                                                         accounts[]
  audit_logs                                                                                       audit_logs[]
  inspection_assignments_inspection_assignments_assigned_byTouser_profiles                         inspection_assignments[]          @relation("inspection_assignments_assigned_byTouser_profiles")
  inspection_assignments_inspection_assignments_assigned_toTouser_profiles                         inspection_assignments[]          @relation("inspection_assignments_assigned_toTouser_profiles")
  inspection_schedule_entries                                                                      inspection_schedule_entries[]
  inspection_schedules                                                                             inspection_schedules[]
  inspection_sessions                                                                              inspection_sessions[]
  inspections                                                                                      inspections[]                         @relation("InspectionToInspector")
  login_history                                                                                    login_history[]
  management_number_group_mapping_management_number_group_mapping_confirmed_by_2024Touser_profiles management_number_group_mapping[] @relation("management_number_group_mapping_confirmed_by_2024Touser_profiles")
  management_number_group_mapping_management_number_group_mapping_confirmed_by_2025Touser_profiles management_number_group_mapping[] @relation("management_number_group_mapping_confirmed_by_2025Touser_profiles")
  management_number_group_mapping_management_number_group_mapping_modified_by_2024Touser_profiles  management_number_group_mapping[] @relation("management_number_group_mapping_modified_by_2024Touser_profiles")
  management_number_group_mapping_management_number_group_mapping_modified_by_2025Touser_profiles  management_number_group_mapping[] @relation("management_number_group_mapping_modified_by_2025Touser_profiles")
  notifications_notifications_recipient_idTouser_profiles                                          notifications[]                   @relation("notifications_recipient_idTouser_profiles")
  notifications_notifications_sender_idTouser_profiles                                             notifications[]                   @relation("notifications_sender_idTouser_profiles")
  sessions                                                                                         sessions[]
  target_list_devices_target_list_devices_matched_byTouser_profiles                                target_list_devices[]             @relation("target_list_devices_matched_byTouser_profiles")
  target_list_devices_target_list_devices_verified_byTouser_profiles                               target_list_devices[]             @relation("target_list_devices_verified_byTouser_profiles")
  task_assignments                                                                                 task_assignments[]
  team_activity_logs                                                                               team_activity_logs[]
  team_members_team_members_added_byTouser_profiles                                                team_members[]                    @relation("team_members_added_byTouser_profiles")
  team_members_team_members_user_profile_idTouser_profiles                                         team_members[]                    @relation("team_members_user_profile_idTouser_profiles")
  team_permissions                                                                                 team_permissions[]
  user_profiles                                                                                    user_profiles?                    @relation("user_profilesTouser_profiles", fields: [approved_by], references: [id])
  other_user_profiles                                                                              user_profiles[]                   @relation("user_profilesTouser_profiles")
  organizations                                                                                    organizations?                    @relation(fields: [organization_id], references: [id])

  @@index([account_type], map: "idx_user_profiles_account_type")
  @@index([email], map: "idx_user_profiles_email")
  @@index([organization_name], map: "idx_user_profiles_organization_name")
  @@index([role], map: "idx_user_profiles_role")
}

model verification_tokens {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

enum access_scope {
  all
  assigned_only
  department
  custom
}

enum assignment_status {
  pending
  in_progress
  completed
  cancelled
}

enum assignment_type {
  scheduled
  urgent
  follow_up
}

enum battery_status {
  normal
  warning
  expired
  missing
  damaged
  not_checked
}

enum battery_visual_condition {
  good
  swollen
  corroded
  damaged
}

enum device_status {
  normal
  warning
  malfunction
  damaged
  not_checked
}

enum gps_issue_type {
  default_coord
  address_mismatch
  outlier
  duplicate
  cluster
}

enum gps_severity {
  critical
  high
  medium
  low
}

enum indicator_status {
  green
  red
  blinking
  off
  not_checked
}

enum inspection_type {
  monthly
  emergency
  installation
  annual
  special
  routine
  maintenance
}

enum instance_status {
  scheduled
  in_progress
  completed
  missed
  rescheduled
}

enum matching_method {
  manual
  auto
  verified
  suggested
}

enum member_type {
  permanent
  temporary
  volunteer
}

enum notification_priority {
  low
  medium
  high
}

enum notification_type {
  new_signup
  approval_completed
  approval_rejected
  system_update
  organization_change_request
  role_updated
}

enum organization_type {
  ministry
  emergency_center
  province
  city
  health_center
}

enum overall_status {
  pass
  fail
  pending
  partial
  requires_attention
}

enum pad_status {
  normal
  warning
  expired
  missing
  damaged
  not_checked
}

enum priority_level {
  critical
  urgent
  high
  medium
  normal
  low
}

enum review_status {
  pending
  approved
  rejected
  requires_revision
}

enum schedule_priority {
  urgent
  high
  normal
  low
}

enum schedule_status {
  scheduled
  in_progress
  completed
  cancelled
}

enum schedule_type {
  daily
  weekly
  monthly
  quarterly
  annual
  custom
}

enum session_status {
  active
  completed
  cancelled
  paused
}

enum task_priority {
  urgent
  high
  normal
  low
}

enum task_status {
  pending
  in_progress
  completed
  cancelled
}

enum task_type {
  inspection
  maintenance
  training
  report
  other
}

enum unavailable_reason {
  disposed
  broken
  other
}

enum user_role {
  master
  emergency_center_admin
  ministry_admin
  regional_admin
  local_admin
  pending_approval
  email_verified
  rejected
  regional_emergency_center_admin
  temporary_inspector
}
