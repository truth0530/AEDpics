# AED Smart Inspection System - Environment Variables Example
# 이 파일을 복사하여 .env.local 파일을 생성하고 실제 값으로 교체하세요
# Copy this file to .env.local and replace with actual values

# ========================================
# Database Connection (NCP PostgreSQL)
# ========================================
DATABASE_URL="postgresql://USER:PASSWORD@HOST:PORT/DATABASE?schema=SCHEMA"

# 예시 (실제 값으로 교체 필요):
# DATABASE_URL="postgresql://aedpics_admin:YOUR_PASSWORD@pg-xxx.vpc-pub-cdb-kr.ntruss.com:5432/aedpics_production?schema=aedpics"

# Optional: Direct database URL for connection pooling
# DIRECT_URL="postgresql://USER:PASSWORD@HOST:PORT/DATABASE?schema=SCHEMA"

# ========================================
# NextAuth.js (NCP Native Authentication)
# ========================================
NEXTAUTH_URL="http://localhost:3001"
NEXTAUTH_SECRET="generate-a-random-32-character-secret-here"
JWT_SECRET="generate-another-random-secret-key"

# Secret 생성 방법:
# openssl rand -base64 32

# ========================================
# Master Account (최초 관리자)
# ========================================
MASTER_EMAIL="admin@nmc.or.kr"

# Note: 복수 이메일은 콤마로 구분하여 지정 가능
# MASTER_EMAIL="admin@nmc.or.kr,admin2@nmc.or.kr"

# ========================================
# Kakao Maps API
# ========================================
NEXT_PUBLIC_KAKAO_MAP_APP_KEY="your_kakao_map_api_key_here"

# Kakao Developers에서 발급: https://developers.kakao.com/
# Note: 코드에서 NEXT_PUBLIC_KAKAO_MAP_KEY로도 참조됨 (통일 필요)

# Optional: Kakao REST API Key (for geocoding scripts)
# KAKAO_REST_API_KEY="your_kakao_rest_api_key_here"

# ========================================
# Email Service (NCP Cloud Outbound Mailer)
# ========================================
NCP_ACCESS_KEY="your_ncp_access_key_here"
NCP_ACCESS_SECRET="your_ncp_access_secret_here"
NCP_SENDER_EMAIL="truth0530@nmc.or.kr"

# NCP 콘솔에서 발급: 마이페이지 > 인증키 관리
# Cloud Outbound Mailer 설정: https://console.ncloud.com/cloudOutboundMailer
# 발신자 이메일 주소는 사전에 등록 및 인증 필요
# 월 1,000,000건 무료 제공 (기본 한도)

# ========================================
# NCP Object Storage (점검 사진 저장)
# ========================================
NCP_OBJECT_STORAGE_REGION="kr-standard"
NCP_OBJECT_STORAGE_ENDPOINT="https://kr.object.ncloudstorage.com"
NCP_OBJECT_STORAGE_ACCESS_KEY="your_object_storage_access_key_here"
NCP_OBJECT_STORAGE_SECRET_KEY="your_object_storage_secret_key_here"
NCP_OBJECT_STORAGE_BUCKET="aedpics-inspections"

# NCP Object Storage 설정:
# 1. NCP 콘솔 > Object Storage > 버킷 생성
# 2. 인증키 생성: 마이페이지 > 인증키 관리 > Object Storage 인증키
# 3. 버킷 정책: 공개 읽기(public-read) 권한 설정
# 4. 점검 사진은 inspections/{sessionId}/{photoType}-{timestamp}.jpg 형식으로 저장됨
#
# Note: NCP_ACCESS_KEY와는 다른 Object Storage 전용 인증키 필요
# S3-compatible API를 사용하므로 AWS SDK 호환

# ========================================
# Application URL Settings
# ========================================
NEXT_PUBLIC_SITE_URL="http://localhost:3001"

# Production:
# NEXT_PUBLIC_SITE_URL="https://aedpics.nmc.or.kr"

# Note: NEXT_PUBLIC_SITE_URL is used for all application URLs
# (email links, redirects, etc.)

# ========================================
# Security & Encryption
# ========================================
ENCRYPTION_KEY="generate-a-random-encryption-key-here"

# 생성 방법:
# openssl rand -base64 32

# ========================================
# Cron Jobs (Scheduled Tasks)
# ========================================
CRON_SECRET="generate-a-random-cron-secret-here"

# Vercel Cron Jobs에서 사용하는 인증 토큰

# ========================================
# Monitoring & Notifications
# ========================================
# Discord Webhook for critical error notifications
# DISCORD_WEBHOOK_URL="https://discord.com/api/webhooks/YOUR_WEBHOOK_URL"

# Enable error logging to external service
# ENABLE_ERROR_LOGGING="true"

# ========================================
# Caching (Vercel KV / Redis)
# ========================================
# Vercel KV 사용 시:
# KV_REST_API_URL="https://your-kv-instance.vercel.app"
# KV_REST_API_TOKEN="your-kv-token"

# ========================================
# Push Notifications (PWA)
# ========================================
# Web Push VAPID Keys (for PWA push notifications)
# NEXT_PUBLIC_VAPID_PUBLIC_KEY="your-vapid-public-key"
# VAPID_PRIVATE_KEY="your-vapid-private-key"

# ========================================
# Feature Flags (Optional)
# ========================================
# Enable/disable specific features
# NEXT_PUBLIC_FEATURE_QUICK_INSPECT="true"
# NEXT_PUBLIC_FEATURE_SCHEDULE="true"
# NEXT_PUBLIC_FEATURE_TEAM_DASHBOARD="false"
# NEXT_PUBLIC_FEATURE_REALTIME_SYNC="false"
# NEXT_PUBLIC_FEATURE_NOTIFICATIONS="false"
# NEXT_PUBLIC_FEATURE_BULK_ACTIONS="false"
# NEXT_PUBLIC_FEATURE_REPORTS="false"
# NEXT_PUBLIC_FEATURE_ANALYTICS="false"

# ========================================
# Development Settings
# ========================================
NODE_ENV="development"
PORT=3001

# Enable debug mode
# NEXT_PUBLIC_DEBUG="true"

# Use mock data instead of real API
# NEXT_PUBLIC_USE_MOCK_DATA="false"

# Enable tutorial mode
# NEXT_PUBLIC_TUTORIAL_MODE="false"

# ========================================
# DEPRECATED - Supabase (레거시, 제거 예정)
# ========================================
# WARNING: These variables are deprecated and should not be used in new code
# They exist only for legacy migration scripts
#
# NEXT_PUBLIC_SUPABASE_URL="https://xxx.supabase.co"
# NEXT_PUBLIC_SUPABASE_ANON_KEY="your-anon-key"
# SUPABASE_SERVICE_ROLE_KEY="your-service-role-key"

# ========================================
# 보안 주의사항
# ========================================
# 1. 이 파일(.env.example)은 커밋해도 됩니다
# 2. .env.local 파일은 절대 커밋하지 마세요
# 3. 실제 비밀번호와 API 키는 안전하게 보관하세요
# 4. 프로덕션 환경에서는 별도의 환경변수를 사용하세요
# 5. NEXTAUTH_SECRET, JWT_SECRET, ENCRYPTION_KEY는 반드시 랜덤하게 생성하세요
# 6. CRON_SECRET은 Vercel Cron Jobs 설정과 동일해야 합니다
# 7. 민감한 정보는 환경변수로만 관리하고 코드에 직접 포함하지 마세요
