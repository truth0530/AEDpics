name: Emergency Server Fix

on:
  workflow_dispatch:  # Manual trigger only

jobs:
  emergency-fix:
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Emergency fix on NCP Server
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.NCP_HOST }}
        username: ${{ secrets.NCP_USERNAME }}
        key: ${{ secrets.NCP_SSH_KEY }}
        port: ${{ secrets.NCP_SSH_PORT }}
        envs: DATABASE_URL,NEXTAUTH_URL,NEXTAUTH_SECRET,JWT_SECRET,NEXT_PUBLIC_KAKAO_MAP_APP_KEY,NEXT_PUBLIC_SITE_URL,RESEND_API_KEY,MASTER_EMAIL,ENCRYPTION_KEY,NCP_ACCESS_KEY,NCP_ACCESS_SECRET,NCP_SENDER_EMAIL,NCP_OBJECT_STORAGE_REGION,NCP_OBJECT_STORAGE_ENDPOINT,NCP_OBJECT_STORAGE_ACCESS_KEY,NCP_OBJECT_STORAGE_SECRET_KEY,NCP_OBJECT_STORAGE_BUCKET
        script: |
          echo "=== Emergency Server Recovery Started ==="
          cd /var/www/aedpics

          echo "Step 0: Create .env.production file"
          echo "DATABASE_URL=\"$DATABASE_URL\"" > .env.production
          echo "NEXTAUTH_URL=\"$NEXTAUTH_URL\"" >> .env.production
          echo "NEXTAUTH_SECRET=\"$NEXTAUTH_SECRET\"" >> .env.production
          echo "JWT_SECRET=\"$JWT_SECRET\"" >> .env.production
          echo "NEXT_PUBLIC_KAKAO_MAP_APP_KEY=\"$NEXT_PUBLIC_KAKAO_MAP_APP_KEY\"" >> .env.production
          echo "NEXT_PUBLIC_SITE_URL=\"$NEXT_PUBLIC_SITE_URL\"" >> .env.production
          echo "RESEND_API_KEY=\"$RESEND_API_KEY\"" >> .env.production
          echo "MASTER_EMAIL=\"$MASTER_EMAIL\"" >> .env.production
          echo "ENCRYPTION_KEY=\"$ENCRYPTION_KEY\"" >> .env.production
          echo "NCP_ACCESS_KEY=\"$NCP_ACCESS_KEY\"" >> .env.production
          echo "NCP_ACCESS_SECRET=\"$NCP_ACCESS_SECRET\"" >> .env.production
          echo "NCP_SENDER_EMAIL=\"$NCP_SENDER_EMAIL\"" >> .env.production
          echo "NCP_OBJECT_STORAGE_REGION=\"$NCP_OBJECT_STORAGE_REGION\"" >> .env.production
          echo "NCP_OBJECT_STORAGE_ENDPOINT=\"$NCP_OBJECT_STORAGE_ENDPOINT\"" >> .env.production
          echo "NCP_OBJECT_STORAGE_ACCESS_KEY=\"$NCP_OBJECT_STORAGE_ACCESS_KEY\"" >> .env.production
          echo "NCP_OBJECT_STORAGE_SECRET_KEY=\"$NCP_OBJECT_STORAGE_SECRET_KEY\"" >> .env.production
          echo "NCP_OBJECT_STORAGE_BUCKET=\"$NCP_OBJECT_STORAGE_BUCKET\"" >> .env.production

          echo "Step 1: Kill all PM2 processes"
          pm2 kill || true

          echo "Step 2: Kill any remaining Node.js processes"
          pkill -9 node || true
          sleep 3

          echo "Step 3: Remove lock files and temporary files"
          rm -f /home/aedpics/.pm2/pm2.pid || true
          rm -f /home/aedpics/.pm2/rpc.sock || true
          rm -f /home/aedpics/.pm2/pub.sock || true

          echo "Step 4: Clean build artifacts"
          rm -rf .next || true
          rm -rf public/sw.js* || true
          rm -rf public/workbox-*.js* || true
          rm -rf public/swe-worker-*.js* || true

          echo "Step 5: Remove node_modules completely"
          rm -rf node_modules || true
          rm -f package-lock.json || true
          sleep 2

          echo "Step 6: Fetch latest code"
          git fetch origin
          git reset --hard origin/main

          echo "Step 7: Install dependencies"
          npm install

          echo "Step 8: Generate Prisma client"
          npx prisma generate

          echo "Step 9: Build application"
          export BUILD_TIMESTAMP=$(date +%s)
          npm run build

          echo "Step 10: Create cache bust file"
          echo "$BUILD_TIMESTAMP" > .next/BUILD_ID
          echo "$BUILD_TIMESTAMP" > public/build-timestamp.txt

          echo "Step 11: Start PM2 with .cjs config"
          pm2 start ecosystem.config.cjs --update-env
          pm2 save --force

          echo "=== Recovery Complete ==="
          echo ""
          echo "Final Status:"
          pm2 status
          pm2 logs --lines 20 --nostream
      env:
        DATABASE_URL: ${{ secrets.DATABASE_URL }}
        NEXTAUTH_URL: ${{ secrets.NEXTAUTH_URL }}
        NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
        JWT_SECRET: ${{ secrets.JWT_SECRET }}
        NEXT_PUBLIC_KAKAO_MAP_APP_KEY: ${{ secrets.NEXT_PUBLIC_KAKAO_MAP_APP_KEY }}
        NEXT_PUBLIC_SITE_URL: ${{ secrets.NEXT_PUBLIC_SITE_URL }}
        RESEND_API_KEY: ${{ secrets.RESEND_API_KEY }}
        MASTER_EMAIL: ${{ secrets.MASTER_EMAIL }}
        ENCRYPTION_KEY: ${{ secrets.ENCRYPTION_KEY }}
        NCP_ACCESS_KEY: ${{ secrets.NCP_ACCESS_KEY }}
        NCP_ACCESS_SECRET: ${{ secrets.NCP_ACCESS_SECRET }}
        NCP_SENDER_EMAIL: ${{ secrets.NCP_SENDER_EMAIL }}
        NCP_OBJECT_STORAGE_REGION: ${{ secrets.NCP_OBJECT_STORAGE_REGION }}
        NCP_OBJECT_STORAGE_ENDPOINT: ${{ secrets.NCP_OBJECT_STORAGE_ENDPOINT }}
        NCP_OBJECT_STORAGE_ACCESS_KEY: ${{ secrets.NCP_OBJECT_STORAGE_ACCESS_KEY }}
        NCP_OBJECT_STORAGE_SECRET_KEY: ${{ secrets.NCP_OBJECT_STORAGE_SECRET_KEY }}
        NCP_OBJECT_STORAGE_BUCKET: ${{ secrets.NCP_OBJECT_STORAGE_BUCKET }}
